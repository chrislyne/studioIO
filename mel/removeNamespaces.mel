//remove namespaces
//select objects to remove specific namespaces or clear slection to remove all
//skips referenced namespaces

//return an objects namespace
global proc string[] getObjectsNamespace(string $objects[])
{
    string $combinedNamespaces[];//create empty container
    clear $combinedNamespaces;
    for( $item in $objects)
    {
        //seperate out absolute name
        string $combinedNamespace = ""; //create empty string
        string $fullNameParts[];//create empty container
        tokenize $item "|" $fullNameParts;
        int $partsCount = `size $fullNameParts`;
        //extract namespaces
        string $buffer[];
        tokenize $fullNameParts[$partsCount-1] ":" $buffer;
        int $namespaceCount = `size $buffer`;
        if($namespaceCount > 1)
        {
            for ($i=0;$i<($namespaceCount-1);$i++)
            {
                $combinedNamespace += (":"+$buffer[$i]);
            }
            $combinedNamespaces[`size $combinedNamespaces`] = $combinedNamespace;
        }
    }
    string $shortCombinedNamespaces[] = stringArrayRemoveDuplicates($combinedNamespaces);//remove duplicate namespaces
    return $shortCombinedNamespaces;
}
 
//reverse an array
global proc string[] reverseArray ( string $array[] ) 
{
string $reversedArray[] = `listRelatives -ad`;
int $arraySize = `size $array`;

for ($i = 0; $i <`size ($array)`; $i++ )
{
    $reversedArray[($arraySize -1 - $i)] = $array[$i];
}
   return $reversedArray;
}

//remove namespaces in scene
global proc removeForScene(string $allNamespaces[])
{       
    for( $item in $allNamespaces)
    {
        if ($item != ":UI" && $item != ":shared")
        {
            namespace -f -mv $item ":";
            namespace -rm $item;
        }
    }
}   

global proc removeNamespaces()
{
    //set current namespace
    namespace -set ":";
    
    //list selected objects
    string $referencedNodes[] = `ls -referencedNodes`;
    select -d $referencedNodes;
    string $sel[] = `ls -sl -sn`;
    float $selectsize = size ($sel);
        
    //check if anything is selected
    if($selectsize > 0)
    {
        //remove namespaces for selected items
        string $namepacesFromSelected[] = getObjectsNamespace($sel); //get namespaces from selected
        removeForScene($namepacesFromSelected);//do remove
    }
    else
    {
        //remove namespaces for scene
        string $referencedNamespaces[] = getObjectsNamespace($referencedNodes);//get referenced namespaces 
        string $allNamespaces[] = `namespaceInfo -lon -r -an`; //get all namespaces
        string $nonreferencedNamespaces[] = stringArrayRemove($referencedNamespaces, $allNamespaces); //calculate non referenced namespaces
        string $reverseNamespaces[] = reverseArray($nonreferencedNamespaces); // reverse array
        removeForScene($reverseNamespaces); //do remove
    }
}

//removeNamespaces;

